name: build

on:
  release:
    types: [published]

jobs:
  build:
    strategy:
      matrix:
        target:
          - Windows
          - Linux
        include:
          - target: Windows
            os: windows-latest
            name: Windows
            architecture: AMD64

          - target: Linux
            os: ubuntu-latest
            name: Linux
            architecture: AMD64

    name: Build on ${{ matrix.os }} with ${{ matrix.architecture }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout SwiftShader
        uses: actions/checkout@v3
        with:
          repository: google/swiftshader
          path: SwiftShader

      - name: Initialize CMake
        working-directory: ${{ github.workspace }}/SwiftShader/build
        run: cmake -DCMAKE_BUILD_TYPE=Release ..

      - name: Build
        working-directory: ${{ github.workspace }}/SwiftShader/build
        run: cmake --build . --parallel

      - name: Run tests
        working-directory: ${{ github.workspace }}/SwiftShader/build
        run: ./vk-unittests

      - name: Remove unnecessary files from artifact
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            rm ${{ github.workspace }}/SwiftShader/build/${{ matrix.target }}/libvulkan.so.1
          elif [ "$RUNNER_OS" == "Windows" ]; then
            del ${{ github.workspace }}\SwiftShader\build\${{ matrix.target }}\vulkan-1.dll
          fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: SwiftShader-${{ matrix.target }}-${{ matrix.architecture }}
          path: ${{ github.workspace }}/SwiftShader/build/${{ matrix.target }}

  upload-artifacts:
    name: Upload artifacts to release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifacts
        uses: actions/download-artifacts@v3

      - name: Install zip
        run: apt install zip

      - name: Archive artifacts
        run: |
          for target in Windows-AMD64 Linux-AMD64; do
            cd SwiftShader-$target
            zip -r ../SwiftShader-$target.zip *
            cd ..
          done

      - name: Upload artifacts to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            SwiftShader-Windows-AMD64.zip
            SwiftShader-Linux-AMD64.zip
