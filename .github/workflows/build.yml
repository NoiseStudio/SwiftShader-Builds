name: build

on:
  release:
    types: [published]

jobs:
  build:
    strategy:
      matrix:
        target:
          - Windows
          - Linux
        include:
          - target: Windows
            os: windows-latest
            name: Windows
            architecture: AMD64
            build-script: build-linux-amd64.sh

          - target: Linux
            os: ubuntu-latest
            name: Linux
            architecture: AMD64
            build-script: build-windows-amd64.ps1

    name: Build on ${{ matrix.os }} with ${{ matrix.architecture }}
    runs-on: ${{ matrix.os }}

    env:
      build-directory: ${{ github.workspace }}/SwiftShader/build
      output-directory: ${{ env.build-directory }}/${{ matrix.target }}

    steps:
      - name: Checkout SwiftShader
        uses: actions/checkout@v3
        with:
          repository: google/swiftshader
          path: SwiftShader

      - name: Install dependencies
        if: matrix.target == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build
          
      - name: Build
        run: ./${{ matrix.build-script }}

      - name: Run tests
        working-directory: ${{ env.build-directory }}
        run: ./vk-unittests

      - name: Remove unnecessary files from artifact
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            rm ${{ env.output-directory }}/libvulkan.so.1
          elif [ "$RUNNER_OS" == "Windows" ]; then
            del ${{ github.workspace }}\SwiftShader\build\${{ matrix.target }}\vulkan-1.dll
          fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: SwiftShader-${{ matrix.target }}-${{ matrix.architecture }}
          path: ${{ env.output-directory }}

  upload-artifacts:
    name: Upload artifacts to release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifacts
        uses: actions/download-artifacts@v3

      - name: Install zip
        run: apt install zip
        
      - name: Archive artifacts
        run: |
          for target in Windows-AMD64 Linux-AMD64; do
            cd SwiftShader-$target
            zip -r ../SwiftShader-$target.zip *
            cd ..
          done

      - name: Upload artifacts to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            SwiftShader-Windows-AMD64.zip
            SwiftShader-Linux-AMD64.zip
